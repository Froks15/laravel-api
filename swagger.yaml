swagger: '2.0'
info:
  version: 1.0.0
  title: Laravel blog api
host: '127.0.0.1:8000'
basePath: /api
schemes:
  - http
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: >
      For accessing the API a valid JWT token must be passed in all the queries
      in

      the 'Authorization' header.

      A valid JWT token is generated by the API and retourned as answer of a
      call

      to the route /login giving a valid user & password.

      The following syntax must be used in the 'Authorization' header :
          Bearer xxxxxx.yyyyyyy.zzzzzz
consumes:
  - application/json
produces:
  - application/json
paths:
  /comments/{id}:
    delete:
      tags:
        - comments
      summary: Deletes a comment
      description: ''
      operationId: deleteComment
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Comment id to delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
    put:
      tags:
        - comments
      summary: Updated comment
      description: This can only be done by the logged in user.
      operationId: updateComment
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: id that need to be updated
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Updated comment object
          required: true
          schema:
            type: object
            required:
              - text
              - user_id
              - category_id
            properties:
              text:
                type: string
              user_id:
                type: integer
                format: int64
              post_id:
                type: integer
                format: int64
      responses:
        '404':
          description: Comment not found
    get:
      tags:
        - comments
      summary: Find comment by ID
      description: ""
      operationId: getCommentById
      parameters:
        - name: id
          in: path
          description: ID of comment to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            required:
              - id
              - text
              - user_id
              - post_id
            properties:
              id:
                type: integer
                format: int64
              text:
                type: string
              user_id:
                type: integer
                format: int64
              post_id:
                type: integer
                format: int64
              created_at:
                type: string
              updated_at:
                type: string
              user:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  name:
                    type: string
                  email:
                    type: string
                  role:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
  /comments:
    post:
      tags:
        - comments
      summary: Add new comment
      description: ''
      operationId: addNewComment
      security:
        - Bearer: []
      parameters:
        - in: body
          name: body
          description: Comment add
          required: true
          schema:
            type: object
            required:
              - text
              - user_id
              - post_id
            properties:
              text:
                type: string
              user_id:
                type: integer
                format: int64
              post_id:
                type: integer
                format: int64
      responses:
        '201':
          description: Created
    get:
      tags: 
      - comments
      summary: Get all comments
      description: get all comments
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: object
              required:
                - id
                - text
                - user_id
                - post_id
                - user
              properties:
                id:
                  type: integer
                  format: int64
                text:
                  type: string
                user_id:
                  type: integer
                  format: int64
                post_id:
                  type: integer
                  format: int64
                user:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                    name:
                      type: string
                    email:
                      type: string
                    role:
                      type: string
                    created_at:
                        type: string
                    updated_at:
                      type: string
  /users/{id}:
    put:
      tags:
        - users
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: id that need to be updated
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            type: object
            required:
              - name
              - email
            properties:
              name:
                type: string
              email:
                type: string
      responses:
        '404':
          description: Category not found
    delete:
      tags:
        - users
      summary: Deletes a user
      description: 'Delete user'
      operationId: deletUser
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: User id to delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: delete
    get:
      tags:
        - users
      summary: Find user by ID
      description: ""
      operationId: getUserById
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: ID of user to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              user:
                required:
                - id
                - name
                - email
                - role
                properties:
                  id:
                    type: integer
                    format: int64
                  name:
                    type: string
                  email:
                    type: string
                  role:
                    type: string
                  created_at:
                      type: string
                  updated_at:
                    type: string
  /categories/{id}:
    delete:
      tags:
        - categories
      summary: Deletes a categories
      description: 'Delete category'
      operationId: deleteCategories
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Categories id to delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
    put:
      tags:
        - categories
      summary: Updated categories
      description: This can only be done by the logged in user.
      operationId: updateCategories
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: id that need to be updated
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Updated categories object
          required: true
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
      responses:
        '404':
          description: Category not found
    get:
      tags: 
      - categories
      summary: Find category by ID
      description: "get category by if"
      operationId: getCategoryById
      parameters:
        - name: id
          in: path
          description: ID of category to return
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int64
              name:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
              deleted_at:
                type: string
              posts:
                type: array
                items:
                  type: object
                  required:
                    - title
                    - text
                    - user_id
                  properties:
                    id:
                      type: integer
                      format: int64
                    title:
                      type: string
                    text:
                      type: string
                    user_id:
                      type: integer
                      format: int64
                    category_id:
                      type: integer
                      format: int64
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    deleted_at:
                      type: string
  /categories:
    post:
      tags:
        - categories
      summary: Add new categories
      description: 'add category'
      operationId: addNewCategories
      security:
        - Bearer: []
      parameters:
        - in: body
          name: body
          description: Categories add
          required: true
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
      responses:
        '201':
          description: Created
    get:
      tags: 
      - categories
      summary: Get all categories
      description: get all categories
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: object
              required:
                - id
                - name
              properties:
                id:
                  type: integer
                  format: int64
                name:
                  type: string
                created_at:
                  type: string
                updated_at:
                  type: string
                deleted_at:
                  type: string
  /logout:
    get:
      tags: 
      - users
      summary: Logout
      description: ""
      responses:
        200:
          description: OK
  /auth:
    post:
      tags: 
        - users
      summary: Login
      description: Auth
      parameters:
        - in: body
          name: body
          description: User auth
          required: true
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200:
          description: OK
  /reg:
    post:
      tags: 
        - users
      summary: Add new user
      description: Create new user
      parameters:
        - in: body
          name: body
          description: User add
          required: true
          schema:
            type: object
            required:
              - name
              - email
              - password
            properties:
              name:
                type: string
              email:
                type: string
              password:
                type: string
      responses:
        '201':
          description: Created
  /posts:
    post:
      tags:
        - posts
      summary: Add new post
      description: ''
      operationId: addNewPost
      security:
        - Bearer: []
      parameters:
        - in: body
          name: body
          description: Post add
          required: true
          schema:
            type: object
            required:
              - title
              - text
            properties:
              title:
                type: string
              text:
                type: string
              user_id:
                type: integer
                format: int64
              category_id:
                type: integer
                format: int64
      responses:
        '201':
          description: Created
    get:
      tags:
        - posts
      summary: Get all posts
      operationId: findAllPosts
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              posts:
                type: array
                items:
                  type: object
                  required:
                    - id
                    - title
                    - text
                  properties:
                    id:
                      type: integer
                      format: int64
                    title:
                      type: string
                    text:
                      type: string
  /posts/{id}:
    put:
      tags:
        - posts
      summary: Updated post
      description: This can only be done by the logged in user.
      operationId: updatePost
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: id that need to be updated
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Updated post object
          required: true
          schema:
            type: object
            required:
              - title
              - text
              - user_id
            properties:
              title:
                type: string
              text:
                type: string
              user_id:
                type: integer
                format: int64
              category_id:
                type: integer
                format: int64
      responses:
        '404':
          description: Post not found
    get:
      tags:
        - posts
      summary: Find post by ID
      operationId: getPostById
      parameters:
        - name: id
          in: path
          description: ID of post to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            required:
              - id
              - title
              - text
            properties:
              id:
                type: integer
                format: int64
              title:
                type: string
              text:
                type: string
              user:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  name:
                    type: string
                  email:
                    type: string
                  role:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
              comments:
                type: array
                items:
                  type: object
                  required:
                    - id
                    - text
                    - user_id
                    - post_id
                  properties:
                    id:
                      type: integer
                      format: int64
                    text:
                      type: string
                    user_id:
                      type: integer
                      format: int64
                    post_id:
                      type: integer
                      format: int64
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    user:
                      type: object
                      properties:
                        id:
                          type: integer
                          format: int64
                        name:
                          type: string
                        email:
                          type: string
                        role:
                          type: string
                        created_at:
                          type: string
                        updated_at:
                          type: string
    delete:
      tags:
        - posts
      summary: Deletes a post
      description: ''
      operationId: deletePost
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: Post id to delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
